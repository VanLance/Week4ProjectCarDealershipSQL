CREATE OR REPLACE FUNCTION add_sale(_sale_id INTEGER, _sale_date TIMESTAMP, _msrp NUMERIC(10,2), _customer_id INTEGER, _staff_id INTEGER, _car_id INTEGER)
RETURNS void 
AS $MAIN$
BEGIN
	INSERT INTO "Sale"(sale_id, sale_date, msrp, customer_id, staff_id, car_id)
	VALUES(_sale_id, _sale_date, _msrp, _customer_id, _staff_id, _car_id);
END;
$MAIN$
LANGUAGE plpgsql;


SELECT add_sale(
	2,
	'20200715 13:50:00',
	1,
	1,
	1,
	1
);

CREATE OR REPLACE FUNCTION add_invoice(_invoice_id INTEGER, _total_labor NUMERIC, _total_parts NUMERIC, _total_cost NUMERIC, _invoice_paid BOOLEAN, _car_id INTEGER, _customer_id INTEGER, _service_id INTEGER, _finance_id INTEGER, _sale_id INTEGER)
RETURNS void 
AS $MAIN$
BEGIN
	INSERT INTO "Invoice"(invoice_id, labor_cost, total_parts, total_cost, invoice_paid, car_id, customer_id, service_id, finance_id, sale_id)
	VALUES(_invoice_id, _total_labor, _total_parts, _total_cost, _invoice_paid, _car_id, _customer_id, _service_id, _finance_id, _sale_id);
END;
$MAIN$
LANGUAGE plpgsql;

SELECT add_invoice(
	1,
	500,
	200,
	25000.00,
	'True',
	1,
	1,
	1,
	1,
	1
);
SELECT add_invoice(
	2,
	400,
	100,
	35000.00,
	'True',
	1,
	1,
	1,
	2,
	2
);
DROP FUNCTION loan_balance
CREATE OR REPLACE Procedure loan_balance(
	_finance_id INTEGER,
	_recent_payment INTEGER
)		

AS $MAIN$
BEGIN
	UPDATE "Finance"
	SET remaining_balance = loan_amount - _recent_payment
	WHERE finance_id = _finance_id;
	COMMIT;
	
END;
$MAIN$
LANGUAGE plpgsql;

CALL loan_balance(1,100);
CALL loan_balance(2,1500);

SELECT *
FROM "Finance";


ALTER TABLE "Finance"
ADD remaining_balance INTEGER;
  
